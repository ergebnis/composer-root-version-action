# https://docs.github.com/en/actions

name: "Integrate"

on: # yamllint disable-line rule:truthy
  pull_request: null
  push:
    branches:
      - "main"

env:
  ERGEBNIS_BOT_NAME: "ergebnis-bot"

jobs:
  coding-standards:
    name: "Coding Standards"

    runs-on: "ubuntu-latest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.3.4"

      - name: "Lint YAML files"
        uses: "ibiqlik/action-yamllint@v3"
        with:
          config_file: ".yamllint.yaml"
          file_or_dir: "."
          strict: true

  tests:
    name: "Tests"

    runs-on: "ubuntu-latest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.3.4"

      - name: "Run GitHub Action when composer.json is not present and path is not specified"
        continue-on-error: true
        uses: "./"

      - name: "Verify that COMPOSER_ROOT_VERSION environment variable has not been set"
        run: |
          if [[ ! -z "${COMPOSER_ROOT_VERSION}" ]]; then
            echo "COMPOSER_ROOT_VERSION environment variable has been unexpectedly set to \"${COMPOSER_ROOT_VERSION}\"."

            exit 1
          fi

          echo "COMPOSER_ROOT_VERSION environment variable has not been set."

      - name: "Run GitHub Action when composer.json is not present"
        continue-on-error: true
        uses: "./"
        with:
          path: ".build/composer-json/present/no"

      - name: "Verify that COMPOSER_ROOT_VERSION environment variable has not been set"
        run: |
          if [[ ! -z "${COMPOSER_ROOT_VERSION}" ]]; then
            echo "COMPOSER_ROOT_VERSION environment variable has been unexpectedly set to \"${COMPOSER_ROOT_VERSION}\"."

            exit 1
          fi

          echo "COMPOSER_ROOT_VERSION environment variable has not been set."

      - name: "Run GitHub Action when composer.json is present but does not have branch-alias defined"
        uses: "./"
        with:
          path: ".build/composer-json/present/yes/branch-alias/defined/no"

      - name: "Verify that COMPOSER_ROOT_VERSION environment variable has not been set"
        run: |
          if [[ ! -z "${COMPOSER_ROOT_VERSION}" ]]; then
            echo "COMPOSER_ROOT_VERSION environment variable has been unexpectedly set to \"${COMPOSER_ROOT_VERSION}\"."

            exit 1
          fi

          echo "COMPOSER_ROOT_VERSION environment variable has not been set."

      - name: "Run GitHub Action when composer.json is present but does not have specified branch-alias defined"
        uses: "./"
        with:
          path: ".build/composer-json/present/yes/branch-alias/defined/yes"
          branch: "foo"

      - name: "Verify that COMPOSER_ROOT_VERSION environment variable has not been set"
        run: |
          if [[ ! -z "${COMPOSER_ROOT_VERSION}" ]]; then
            echo "COMPOSER_ROOT_VERSION environment variable has been unexpectedly set to \"${COMPOSER_ROOT_VERSION}\"."

            exit 1
          fi

          echo "COMPOSER_ROOT_VERSION environment variable has not been set."

      - name: "Run GitHub Action when composer.json is present and has specified branch-alias defined"
        uses: "./"
        with:
          path: ".build/composer-json/present/yes/branch-alias/defined/yes"
          branch: "bar"

      - name: "Verify that COMPOSER_ROOT_VERSION environment variable has been set"
        run: |
          if [[ -z "${COMPOSER_ROOT_VERSION}" ]]; then
            echo "COMPOSER_ROOT_VERSION environment variable has not been set."

            exit 1
          fi

          if [[ "${COMPOSER_ROOT_VERSION}" != "${EXPECTED_COMPOSER_ROOT_VERSION}" ]]; then
            echo "COMPOSER_ROOT_VERSION environment variable has been unexpectedly set to \"${COMPOSER_ROOT_VERSION}\", expected \"${EXPECTED_COMPOSER_ROOT_VERSION}\"."

            exit 1
          fi

          echo "COMPOSER_ROOT_VERSION environment variable has been set to \"${COMPOSER_ROOT_VERSION}\"."
        env:
          EXPECTED_COMPOSER_ROOT_VERSION: "1.0-dev"

      - name: "Run GitHub Action when composer.json is present and has default branch-alias defined"
        uses: "./"
        with:
          path: ".build/composer-json/present/yes/branch-alias/defined/yes"

      - name: "Verify that COMPOSER_ROOT_VERSION environment variable has been set"
        run: |
          if [[ -z "${COMPOSER_ROOT_VERSION}" ]]; then
            echo "COMPOSER_ROOT_VERSION environment variable has not been set."

            exit 1
          fi

          if [[ "${COMPOSER_ROOT_VERSION}" != "${EXPECTED_COMPOSER_ROOT_VERSION}" ]]; then
            echo "COMPOSER_ROOT_VERSION environment variable has been unexpectedly set to \"${COMPOSER_ROOT_VERSION}\", expected \"${EXPECTED_COMPOSER_ROOT_VERSION}\"."

            exit 1
          fi

          echo "COMPOSER_ROOT_VERSION environment variable has been set to \"${COMPOSER_ROOT_VERSION}\"."
        env:
          EXPECTED_COMPOSER_ROOT_VERSION: "2.0-dev"

  merge:
    name: "Merge"

    runs-on: "ubuntu-latest"

    needs:
      - "coding-standards"
      - "tests"

    if: >
      github.event_name == 'pull_request' &&
      github.event.pull_request.draft == false && (
        github.event.action == 'opened' ||
        github.event.action == 'reopened' ||
        github.event.action == 'synchronize'
      ) && (
        (github.actor == 'dependabot[bot]' && startsWith(github.event.pull_request.title, 'github-actions(deps)')) ||
        (github.actor == 'localheinz' && contains(github.event.pull_request.labels.*.name, 'merge'))
      )

    steps:
      - name: "Request review from @${{ env.ERGEBNIS_BOT_NAME }}"
        uses: "actions/github-script@v4.0.2"
        with:
          github-token: "${{ secrets.ERGEBNIS_BOT_TOKEN }}"
          script: |
            const pullRequest = context.payload.pull_request
            const repository = context.repo

            const reviewers = [
              "${{ env.ERGEBNIS_BOT_NAME }}",
            ]

            await github.pulls.requestReviewers({
              owner: repository.owner,
              pull_number: pullRequest.number,
              repo: repository.repo,
              reviewers: reviewers,
            })

      - name: "Assign @${{ env.ERGEBNIS_BOT_NAME }}"
        uses: "actions/github-script@v4.0.2"
        with:
          github-token: "${{ secrets.ERGEBNIS_BOT_TOKEN }}"
          script: |
            const pullRequest = context.payload.pull_request
            const repository = context.repo

            const assignees = [
              "${{ env.ERGEBNIS_BOT_NAME }}",
            ]

            await github.issues.addAssignees({
              assignees: assignees,
              issue_number: pullRequest.number,
              owner: repository.owner,
              repo: repository.repo,
            })

      - name: "Approve pull request"
        uses: "actions/github-script@v4.0.2"
        if: "github.actor != '${{ env.ERGEBNIS_BOT_NAME }}'"
        with:
          github-token: "${{ secrets.ERGEBNIS_BOT_TOKEN }}"
          script: |
            const pullRequest = context.payload.pull_request
            const repository = context.repo

            await github.pulls.createReview({
              event: "APPROVE",
              owner: repository.owner,
              pull_number: pullRequest.number,
              repo: repository.repo,
            })

      - name: "Merge pull request"
        uses: "actions/github-script@v4.0.2"
        with:
          github-token: "${{ secrets.ERGEBNIS_BOT_TOKEN }}"
          script: |
            const pullRequest = context.payload.pull_request
            const repository = context.repo

            await github.pulls.merge({
              merge_method: "merge",
              owner: repository.owner,
              pull_number: pullRequest.number,
              repo: repository.repo,
            })
